package ca.rollends.simuflow.blocks;

import ca.rollends.simuflow.blocks.codegen.IBlockVisitor;
import ca.rollends.simuflow.blocks.python.Sequence;
import ca.rollends.simuflow.blocks.python.Statement;
import ca.rollends.simuflow.blocks.traits.Dimension;

import java.util.List;

public abstract class BasicBlock {

    public final static BasicSignal time = new BasicSignal(Dimension.Scalar, BasicSignal.Type.REAL, "time");

    protected final List<BasicSignal> inputs;
    protected final List<BasicSignal> outputs;

    protected BasicBlock(List<BasicSignal> inputs, List<BasicSignal> outputs) {
        this.inputs = inputs;
        this.outputs = outputs;

        // Register the output signals as generated by this block
        this.outputs.stream().forEach( (block) -> block.registerWith(this) );
    }

    public List<BasicSignal> getInputs() { return inputs; }
    public List<BasicSignal> getOutputs() { return outputs; }

    public abstract void accept(IBlockVisitor visitor);

    public abstract Sequence makePreparationStep();
    public abstract Sequence makeOutputStep();
}
